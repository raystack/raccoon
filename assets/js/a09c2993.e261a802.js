"use strict";(self.webpackChunkraccoon=self.webpackChunkraccoon||[]).push([[899],{5680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>m});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),g=a,m=p["".concat(c,".").concat(g)]||p[g]||d[g]||o;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},6740:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(8168),a=(r(6540),r(5680));const o={id:"introduction",slug:"/"},i="Introduction",s={unversionedId:"introduction",id:"introduction",title:"Introduction",description:"Raccoon is a high-throughput, low-latency service that provides an API to ingest clickstream data from mobile apps and sites and publish it to a message queue for stream processing. Raccoon uses the WebSocket protocol for peer-to-peer communication and protobuf as the serialization format. It provides an event-type agnostic API that accepts a batch \\(array\\) of events in protobuf format. Refer here for the protobuf definition format that Raccoon accepts.",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/",permalink:"/raccoon/",draft:!1,editUrl:"https://github.com/raystack/raccoon/edit/master/docs/docs/introduction.md",tags:[],version:"current",frontMatter:{id:"introduction",slug:"/"},sidebar:"docsSidebar",next:{title:"Quickstart",permalink:"/raccoon/quickstart"}},c={},l=[{value:"Key Features",id:"key-features",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Usage",id:"usage",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...o}=e;return(0,a.yg)(p,(0,n.A)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"introduction"},"Introduction"),(0,a.yg)("p",null,"Raccoon is a high-throughput, low-latency service that provides an API to ingest clickstream data from mobile apps and sites and publish it to a message queue for stream processing. Raccoon uses the WebSocket protocol for peer-to-peer communication and protobuf as the serialization format. It provides an event-type agnostic API that accepts a batch ","(","array",")"," of events in protobuf format. Refer ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/raystack/proton/tree/main/raystack/raccoon"},"here")," for the protobuf definition format that Raccoon accepts."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Overiew",src:r(7147).A,width:"622",height:"336"})),(0,a.yg)("h2",{id:"key-features"},"Key Features"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Event Agnostic")," - Raccoon API is event agnostic. This allows you to push any event with any schema."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Event Distribution")," - Events are distributed to message queue topics based on the event meta-data."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"High performance")," - Long-running persistent, peer-to-peer connection reduce connection set up overheads. Websocket provides reduced battery consumption for mobile apps ","(","based on usage statistics",")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Guaranteed Event Delivery")," - Server acknowledgments based on delivery. Currently, it acknowledges failures/successes. Additionally, users can augment the server for zero-data loss or at-least-once guarantees."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Reduced payload sizes")," - Protobuf based"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Metrics:")," - Built-in monitoring includes latency and active connections.")),(0,a.yg)("h2",{id:"use-cases"},"Use Cases"),(0,a.yg)("p",null,"Raccoon can be used as an event collector, event distributor, and forwarder of events generated from mobile/web/IoT front-ends as it provides a high volume, high throughput, low latency event-agnostic APIs. In addition, it can serve the needs of data ingestion in near-real-time. Some domains where Raccoon could be used are listed below."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Adtech streams: Where users can ingest digital marketing data from external sources into the organization's backends"),(0,a.yg)("li",{parentName:"ul"},"Clickstream: Where apps can stream user behavior data in real-time"),(0,a.yg)("li",{parentName:"ul"},"Edge systems: Where devices ","(","say in the IoT world",")"," need to send data to the cloud."),(0,a.yg)("li",{parentName:"ul"},"Event Sourcing: Such as stock update dashboards, autonomous/self-drive use cases")),(0,a.yg)("h2",{id:"usage"},"Usage"),(0,a.yg)("p",null,"Explore the following resources to get started with Raccoon:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/raccoon/guides/overview"},"Guides")," provide information on deployment and client samples."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/raccoon/concepts/architecture"},"Concepts")," describe all important Raccoon concepts."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/raccoon/reference/configurations"},"Reference")," contains details about configurations, metrics, and other aspects of Raccoon."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/raccoon/contribute/contribution"},"Contribute")," contains resources for anyone who wants to contribute to Raccoon.")))}d.isMDXComponent=!0},7147:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/overview-1cc94b25597f055e7f611940bf8ab655.svg"}}]);